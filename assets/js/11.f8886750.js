(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{63:function(n,i,t){"use strict";t.r(i);var a=t(0),e=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var n=this,i=n.$createElement,t=n._self._c||i;return t("div",{staticClass:"content"},[t("h3",{attrs:{id:"css3常用功能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#css3常用功能","aria-hidden":"true"}},[n._v("#")]),n._v(" CSS3常用功能")]),t("hr"),t("p",[n._v("1、圆角")]),t("ul",[t("li",[n._v("Border-radius: 30px")]),t("li",[n._v("所有IE都不支持CSS圆角，要IE9才行")])]),t("p",[n._v("2、盒状阴影(Box Shadow)")]),t("ul",[t("li",[n._v("Box-shadow: 3px 4px 4px #ffffff")]),t("li",[n._v("四个参数，分别为：X轴偏移值、Y轴偏移值、阴影的模糊度、以及阴影的颜色。")])]),t("p",[n._v("3、线性渐变（Gradient）\nFirefox：-moz-linear-gradient(top, #444444, #999999);")]),t("ul",[t("li",[n._v("第一个参数表示线性渐变的方向，top是从上到下、left从左到右，如果定义为left top，就是从左上角到右下角。")]),t("li",[n._v("第二个参数和第三个参数分别是起点颜色和终点颜色。可以在中间插入多种颜色，表示多种颜色的渐变。\nWebkit：-webkit-gradient(linear,left top, left bottom, color-stop(0, #444444),color-           stop(1, #999999));")]),t("li",[n._v("第一个表示渐变的类型（type），linear(线性渐变)或者radial（辐射渐变）。")]),t("li",[n._v("第二个参数和第三个参数，都是一对值，分别表示渐变起点和终点，可用坐标形式表示，可以用关键值表示。")]),t("li",[n._v("第三个参数和第四个参数，分别表示两个color-stop函数，该函数接受两个参数，第一个表示渐变的位置，0为起点，0.5为中点，1为结束点；第二个参数表示该点的颜色。\nDXImageTransform.Microsoft.gradient(startColorstr='#444444', endColorstr='#999999', GradientType='0’);")]),t("li",[n._v("IE靠滤镜实现渐变。startColorstr表示起点的颜色，endColorstr表示终点的颜色。")]),t("li",[n._v("GradientType表示渐变类型，0位缺省值，表示垂直渐变，1表示水平渐变。")])]),t("p",[n._v("4、透明（opacity）")]),t("ul",[t("li",[n._v("将上层对象的颜色变为透明，可以透过它看到下层对象，如朦层。")]),t("li",[n._v("background-color: rgba(180, 180, 144, 0.6);")]),t("li",[n._v("除IE浏览器外几乎都支持rgba函数，第四个为透明度。")])]),t("p",[n._v("5、旋转（rotation）")]),t("ul",[t("li",[n._v("旋转rotate()函数通过指定的角度参数使元素相对原点进行旋转，主要在二位空间内进行操作。")]),t("li",[n._v("正值即相对原点中心顺时针旋转，负值即相对原点中心逆时针旋转。")])]),t("p",[n._v("6、变形（transfrom）")]),t("ul",[t("li",[t("p",[n._v("扭曲（skew）\nSkew函数能够让元素倾斜显示，可以将一个对象以其中心位置围绕X轴和Y轴按照一定的角度倾斜。\nrotate函数只是旋转，不会改变元素的形状；shew函数不会旋转，而只会改变元素的形状。\nskew(x,y)使元素在水平和垂直方向同时扭曲\nskewX(x)仅使元素在水平方向扭曲变形（X轴扭曲变形）；\nskewY(y)仅使元素在垂直方向扭曲变形（Y轴扭曲变形）")])]),t("li",[t("p",[n._v("缩放（scale）\n缩放函数让元素根据中心原点对对象进行缩放。\nscale(X,Y)使元素水平方向和垂直方向同时缩放（也就是X轴和Y轴同时缩放）\nscaleX(x)元素仅水平方向缩放（X轴缩放）\nscaleY(y)元素仅垂直方向缩放（Y轴缩放）")])]),t("li",[t("p",[n._v("变动、移位（translate）\ntranslate函数可以将元素向指定的方向移动，类似于position中的relative\ntranslate(x,y)水平方向和垂直方向同时移动（也就是X轴和Y轴同时移动）\ntranslateX(x)仅水平方向移动（X轴移动）\ntranslateY(Y)仅垂直方向移动（Y轴移动）")])])]),t("p",[n._v("7、过渡（transition）")]),t("ul",[t("li",[n._v("transition的作用是，制定状态变化所需的时间")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("img{\n    transition: 1s;\n}\n")])]),t("p",[n._v("即图片放大的过程需要1秒")]),t("ul",[t("li",[n._v("可制定transition适用的属性，如height，即height的变化需要1秒实现，其他变化瞬间实现")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("img{\n    transition: 1s height;\n}\n")])]),t("ul",[t("li",[n._v("延迟——delay，制定一个delay参数，width在1秒之后，再开始变化，就是延迟1秒。")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" img{\n     transition: 1s height, 1s 1s width;\n }\n")])]),t("p",[n._v("delay可以指定动画发生的顺序，使得多个不同的transition可以连在一起，形成复杂的效果。")]),t("ul",[t("li",[n._v("变化速度——timing function，默认不是匀速，逐渐放慢，这叫ease。")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("img{\n    transition: 1s ease;\n}\n")])]),t("pre",[t("code",[n._v("       linear：匀速\n       ease-in：加速\n       ease-out：减速\n       cubic-bezier函数：自定义速度模式\n")])]),t("ul",[t("li",[n._v("transition的完整写下")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("img{\n    transition: 1s 1s height ease;\n}\nimg{\n    transition-property: height;\n    transition-duration: 1s;\n    transition-delay: 1s;\n    transition-timing-function: ease;\n    }\n")])]),t("ul",[t("li",[n._v("transition需要明确知道开始状态和结束状态的具体数值，只有两个状态，不能定义中间状态。")]),t("li",[n._v("transition需要事件触发，没法在网页加载时自动发生。")]),t("li",[n._v("transition是一次性的，不能重复发生，除非一再出发。")]),t("li",[n._v("一条transition规则，只能定义一个属性的变化，不能涉及多个属性。")])]),t("p",[n._v("8、动画（animation）")]),t("p",[n._v("Animation指定动画一个周期持续的时间，以及动画效果的名称。")]),t("ul",[t("li",[n._v("当鼠标悬停在div元素上时，会产生名为rainbow的动画效果，持续时间为1秒。")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("div:hover {\n  animation: 1s rainbow;\n}\n@keyframes rainbow {\n  0% { background: #c00; }\n  50% { background: orange; }\n  100% { background: yellowgreen; }\n  }\n")])]),t("ul",[t("li",[n._v("播放次数")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("div:hover {\n  animation: 1s rainbow infinite;  //无限次播放\n}\ndiv:hover {\n animation: 1s rainbow 3;  //3次\n}\n")])]),t("ul",[t("li",[n._v("animation-fill-mode属性，forwards表示让动画停留在结束状态")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("div:hover {\n animation: 1s rainbow forwards;\n}\n")])]),t("p",[n._v(".none：默认值，回到动画没开始的状态")]),t("p",[n._v(".backwards：让动画回到第一帧的状态")]),t("p",[n._v(".both：根据animation-direction轮流应用forwards和backwards规则")]),t("ul",[t("li",[n._v("animation-direction，动画播放方向，常用的是normal和reverse。")]),t("li",[n._v("animation的完整形式")])]),t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("    div:hover {\n      animation: 1s 1s rainbow linear 3 forwards normal;\n    }\n    div:hover {\n      animation-name: rainbow;\n      animation-duration: 1s;\n      animation-timing-function: linear;\n      animation-delay: 1s;\n      animation-fill-mode:forwards;\n      animation-direction: normal;\n      animation-iteration-count: 3;\n    }\n")])]),t("ul",[t("li",[n._v("keyframes关键字用来定义动画的各个状态")]),t("li",[n._v("浏览器从一个状态向一个状态过渡，是平滑过渡，steps函数可以实现分步过渡。")]),t("li",[n._v("IE10和Firefox支持没有前缀的animation，而chrome不支持，必须使用webkit前缀。")])])])}],!1,null,null,null);i.default=e.exports}}]);